# Generated by Django 5.1.6 on 2025-03-06 04:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Industry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="產業名稱")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="產業描述"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NewsArticle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="標題")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="摘要"),
                ),
                ("url", models.URLField(unique=True, verbose_name="文章連結")),
                ("source", models.CharField(max_length=255, verbose_name="來源")),
                ("published_at", models.DateTimeField(verbose_name="發布時間")),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "fb_id",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "google_id",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "apple_id",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "line_id",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "OPEN_API_Key",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "Secret_Key",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keyword", models.CharField(max_length=100, verbose_name="關鍵字")),
                (
                    "industry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keywords",
                        to="modelCore.industry",
                        verbose_name="所屬產業",
                    ),
                ),
            ],
        ),
    ]
